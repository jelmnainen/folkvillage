/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folkvillageui;

import folkvillage.*;
import folkvillage.buildings.Building;
import java.util.ArrayList;

/**
 *
 * @author sanho
 */
public class TabbedUI extends javax.swing.JFrame {
    
    private Village village;
    private Resource resources;

    /**
     * Creates new form TabbedUI
     */
    public TabbedUI(Village village) {
        this.village = village;
        initComponents();
        this.tick();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        view = new javax.swing.JSplitPane();
        Menu = new javax.swing.JPanel();
        turnClock = new javax.swing.JLabel();
        quitBtn = new javax.swing.JButton();
        endTurnBtn = new javax.swing.JButton();
        mainView = new javax.swing.JTabbedPane();
        eventView = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        populationView = new javax.swing.JPanel();
        populationAmount = new javax.swing.JLabel();
        populationGrowthrate = new javax.swing.JLabel();
        buildingsView = new javax.swing.JPanel();
        constructedBuildingsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        constructedBuildingsArea = new javax.swing.JTextArea();
        resourcesLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        turnClock.setText("Turn: 0");

        quitBtn.setText("Ragequit");
        quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt);
            }
        });

        endTurnBtn.setText("End Turn");
        endTurnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTurnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addComponent(turnClock)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(endTurnBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(turnClock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(endTurnBtn)
                .addGap(18, 18, 18)
                .addComponent(quitBtn)
                .addContainerGap())
        );

        view.setLeftComponent(Menu);

        jLabel2.setText("Inheritance!");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("You have inherited the leadership of this village from your parent. Now go forge your own saga!\n");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout eventViewLayout = new javax.swing.GroupLayout(eventView);
        eventView.setLayout(eventViewLayout);
        eventViewLayout.setHorizontalGroup(
            eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                    .addGroup(eventViewLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        eventViewLayout.setVerticalGroup(
            eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainView.addTab("Event", eventView);

        populationAmount.setText("Population: 0 ");

        populationGrowthrate.setText("Growthrate: 0");

        javax.swing.GroupLayout populationViewLayout = new javax.swing.GroupLayout(populationView);
        populationView.setLayout(populationViewLayout);
        populationViewLayout.setHorizontalGroup(
            populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populationAmount)
                    .addComponent(populationGrowthrate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        populationViewLayout.setVerticalGroup(
            populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(populationAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populationGrowthrate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainView.addTab("Population", populationView);

        constructedBuildingsLabel.setText("Constructed Buildings:");

        constructedBuildingsArea.setColumns(20);
        constructedBuildingsArea.setRows(5);
        jScrollPane2.setViewportView(constructedBuildingsArea);

        resourcesLabel.setText("Resoruces");

        ArrayList<String> helper = new ArrayList();
        for(Resource r : Resource.values()){
            //String amount = Integer.toString(this.village.getTreasury().getResourceAmount(r));
            String amount = "0";
            helper.add(r.toString() + ": " + amount );
        }

        final String[] resources = helper.toArray(new String[helper.size()]);
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = resources;
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList1);

        javax.swing.GroupLayout buildingsViewLayout = new javax.swing.GroupLayout(buildingsView);
        buildingsView.setLayout(buildingsViewLayout);
        buildingsViewLayout.setHorizontalGroup(
            buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buildingsViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(constructedBuildingsLabel))
                .addGap(18, 18, 18)
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resourcesLabel)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        buildingsViewLayout.setVerticalGroup(
            buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buildingsViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(constructedBuildingsLabel)
                    .addComponent(resourcesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(buildingsViewLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainView.addTab("Buildings", buildingsView);

        view.setRightComponent(mainView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitBtnActionPerformed

    private void endTurnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTurnBtnActionPerformed
        this.tick();
    }//GEN-LAST:event_endTurnBtnActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new TabbedUI().setVisible(new Village());
            }
        });
    }
    
    /**
     * Tick is called after every endturn event. It calls Village's tick(),
     * which distributes the tick to all member's tick functions.
     * 
     * After tick, UI updates itself to reflect the new situation
     */
    private void tick(){
        
        this.village.tick();
        this.updateUIAfterTick();
        
    }
    
    /**
     * Wraps all UI update functions
     */
    private void updateUIAfterTick(){ 
        //turn counter
        this.turnClock.setText("Turn: " + this.village.getTurnCountAsString());
        
        //population
        this.populationAmount.setText("Population: " + Integer.toString(this.village.getPopulation().getPopulationAmount()) );
        this.populationGrowthrate.setText("Growthrate: " + Float.toString(this.village.getPopulation().getGrowthrate()));

        //buildings:
        this.constructedBuildingsArea.setText(this.getConstructedBuildingsAsList());
    }
    
    private String getConstructedBuildingsAsList(){
        
        ArrayList<Building> buildings   = village.getReadyBuildings();
        String completedBuildings       = "";
        
        if(buildings.size() > 0){
            
            for(Building b : buildings){
                completedBuildings += b.getName() + " " + b.getType() + System.lineSeparator();
            }
            
        } else {
            
            completedBuildings = "There aren't any completed buildings!";
            
        }
        
        return completedBuildings;
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel buildingsView;
    private javax.swing.JTextArea constructedBuildingsArea;
    private javax.swing.JLabel constructedBuildingsLabel;
    private javax.swing.JButton endTurnBtn;
    private javax.swing.JPanel eventView;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTabbedPane mainView;
    private javax.swing.JLabel populationAmount;
    private javax.swing.JLabel populationGrowthrate;
    private javax.swing.JPanel populationView;
    private javax.swing.JButton quitBtn;
    private javax.swing.JLabel resourcesLabel;
    private javax.swing.JLabel turnClock;
    private javax.swing.JSplitPane view;
    // End of variables declaration//GEN-END:variables
}
