/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folkvillageui;

import folkvillage.*;
import folkvillage.events.*;
import folkvillage.buildings.Building;
import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author sanho
 */
public class TabbedUI extends javax.swing.JFrame {
    
    private Village village;
    private Resource resources;
    private Event currentEvent;
    private ArrayList<Event> events;
    private ArrayList<String> eventNames;
    private String lastEventText;
    
    /**
     * Creates new form TabbedUI
     */
    public TabbedUI(Village village) {
        this.village = village;
        initComponents();
        this.initEvents();
        this.tick();
        this.setVisible(true);
    }
    
    /**
     * I'm sure there is a better way, using class.forName, but couldn't get that
     * to work in time.
     */
    private void initEvents(){
        ArrayList<Event> en = new ArrayList();
        en.add(new Event_MessangerOfGods(this.village));
        en.add(new Event_PaganPriest(this.village));
        this.events = en;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        view = new javax.swing.JSplitPane();
        Menu = new javax.swing.JPanel();
        turnClock = new javax.swing.JLabel();
        quitBtn = new javax.swing.JButton();
        mainView = new javax.swing.JTabbedPane();
        eventView = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventText = new javax.swing.JTextArea();
        eventOption1Btn = new javax.swing.JButton();
        eventOption2Btn = new javax.swing.JButton();
        eventOption3Btn = new javax.swing.JButton();
        eventOption4Btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lastEventTextBox = new javax.swing.JTextArea();
        populationView = new javax.swing.JPanel();
        populationAmount = new javax.swing.JLabel();
        populationGrowthrate = new javax.swing.JLabel();
        buildingsView = new javax.swing.JPanel();
        constructedBuildingsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        constructedBuildingsArea = new javax.swing.JTextArea();
        resourcesLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        turnClock.setText("Turn: 0");

        quitBtn.setText("Ragequit");
        quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addComponent(turnClock)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(turnClock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 559, Short.MAX_VALUE)
                .addComponent(quitBtn)
                .addContainerGap())
        );

        view.setLeftComponent(Menu);

        jLabel2.setText("New event!");

        eventText.setColumns(20);
        eventText.setLineWrap(true);
        eventText.setRows(5);
        eventText.setText("You have inherited the leadership of this village from your parent. Now go forge your own saga!\n");
        jScrollPane1.setViewportView(eventText);

        eventOption1Btn.setText("jButton1");
        eventOption1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventOption1BtnActionPerformed(evt);
            }
        });

        eventOption2Btn.setText("jButton2");
        eventOption2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventOption2BtnActionPerformed(evt);
            }
        });

        eventOption3Btn.setText("jButton3");
        eventOption3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventOption3BtnActionPerformed(evt);
            }
        });

        eventOption4Btn.setText("jButton4");
        eventOption4Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventOption4BtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Last event message");

        lastEventTextBox.setColumns(20);
        lastEventTextBox.setLineWrap(true);
        lastEventTextBox.setRows(5);
        lastEventTextBox.setText("Welcome to FolkVillage!\n\nYou can see your village by going to Population and\nBuildings tabs.\n\nYou can end your turn by choosing one of the event \nresponses.");
        jScrollPane4.setViewportView(lastEventTextBox);

        javax.swing.GroupLayout eventViewLayout = new javax.swing.GroupLayout(eventView);
        eventView.setLayout(eventViewLayout);
        eventViewLayout.setHorizontalGroup(
            eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                    .addComponent(eventOption1Btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventOption2Btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventOption3Btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventOption4Btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, eventViewLayout.createSequentialGroup()
                        .addGroup(eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        eventViewLayout.setVerticalGroup(
            eventViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventOption1Btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventOption2Btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventOption3Btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventOption4Btn)
                .addContainerGap())
        );

        mainView.addTab("Event", eventView);

        populationAmount.setText("Population: 0 ");

        populationGrowthrate.setText("Growthrate: 0");

        javax.swing.GroupLayout populationViewLayout = new javax.swing.GroupLayout(populationView);
        populationView.setLayout(populationViewLayout);
        populationViewLayout.setHorizontalGroup(
            populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populationAmount)
                    .addComponent(populationGrowthrate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        populationViewLayout.setVerticalGroup(
            populationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(populationAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populationGrowthrate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainView.addTab("Population", populationView);

        constructedBuildingsLabel.setText("Constructed Buildings:");

        constructedBuildingsArea.setColumns(20);
        constructedBuildingsArea.setRows(5);
        jScrollPane2.setViewportView(constructedBuildingsArea);

        resourcesLabel.setText("Resoruces");

        ArrayList<String> helper = new ArrayList();
        for(Resource r : Resource.values()){
            //String amount = Integer.toString(this.village.getTreasury().getResourceAmount(r));
            System.out.println(r);
            String amount = "0";
            helper.add(r.toString() + ": " + amount );
        }

        final String[] resources = helper.toArray(new String[helper.size()]);
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = resources;
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList1);

        javax.swing.GroupLayout buildingsViewLayout = new javax.swing.GroupLayout(buildingsView);
        buildingsView.setLayout(buildingsViewLayout);
        buildingsViewLayout.setHorizontalGroup(
            buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buildingsViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(constructedBuildingsLabel))
                .addGap(18, 18, 18)
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resourcesLabel)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        buildingsViewLayout.setVerticalGroup(
            buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buildingsViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(constructedBuildingsLabel)
                    .addComponent(resourcesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buildingsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(buildingsViewLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 308, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainView.addTab("Buildings", buildingsView);

        view.setRightComponent(mainView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(view)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitBtnActionPerformed

    private void eventOption1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventOption1BtnActionPerformed
        this.currentEvent.executeOption1();
        this.tick();
    }//GEN-LAST:event_eventOption1BtnActionPerformed

    private void eventOption2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventOption2BtnActionPerformed
        this.currentEvent.executeOption2();
        this.tick();
    }//GEN-LAST:event_eventOption2BtnActionPerformed

    private void eventOption3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventOption3BtnActionPerformed
        this.currentEvent.executeOption3();
        this.tick();
    }//GEN-LAST:event_eventOption3BtnActionPerformed

    private void eventOption4BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventOption4BtnActionPerformed
        this.currentEvent.executeOption4();
        this.tick();
    }//GEN-LAST:event_eventOption4BtnActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabbedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new TabbedUI().setVisible(new Village());
            }
        });
    }
    
    /**
     * Tick is called after every endturn event. It calls Village's tick(),
     * which distributes the tick to all member's tick functions.
     * 
     * After tick, UI updates itself to reflect the new situation
     */
    private void tick(){
        
        this.village.tick();
        if(this.village.getTurn() > 1){
            this.lastEventTextBox.setText(this.currentEvent.getEventResultText());
        }
        this.currentEvent = this.getNewEvent();
        this.updateUIAfterTick();
        
    }
    
    private Event getNewEvent(){
        Random rand = new Random();
        //String name = "folkvillage.events.Event_" + this.eventNames.get(rand.nextInt((this.eventNames.size())));
        
        return(this.events.get(rand.nextInt(this.events.size())));
        
        //try{
            //Class<?> event = Class.forName(name);
            //Constructor<?> ctor = event.getConstructor(String.class);
            //Object object = ctor.newInstance(new Object[] {  });
            //Object object = Class.forName(name).newInstance(this.village);
          //  System.out.println(object);
            //return (Event)object;
       // } catch(Exception e){
         //   System.out.println(e);
         //   System.exit(0);
       // }
        
            
    }
    
    /**
     * Wraps all UI update functions
     */
    private void updateUIAfterTick(){ 
        //turn counter
        this.turnClock.setText("Turn: " + this.village.getTurnCountAsString());
        
        //population
        this.populationAmount.setText("Population: " + Integer.toString(this.village.getPopulation().getPopulationAmount()) );
        this.populationGrowthrate.setText("Growthrate: " + Float.toString(this.village.getPopulation().getGrowthrate()));

        //buildings:
        this.constructedBuildingsArea.setText(this.getConstructedBuildingsAsList());
        
        //event
        this.eventText.setText(this.currentEvent.getEventText());
        this.eventOption1Btn.setText(this.currentEvent.getOption1Text());
        this.eventOption2Btn.setText(this.currentEvent.getOption2Text());
        this.eventOption3Btn.setText(this.currentEvent.getOption3Text());
        this.eventOption4Btn.setText(this.currentEvent.getOption4Text());
        
    }
    
    private String getConstructedBuildingsAsList(){
        
        ArrayList<Building> buildings   = village.getReadyBuildings();
        String completedBuildings       = "";
        
        if(buildings.size() > 0){
            
            for(Building b : buildings){
                completedBuildings += b.getName() + " " + b.getType() + System.lineSeparator();
            }
            
        } else {
            
            completedBuildings = "There aren't any completed buildings!";
            
        }
        
        return completedBuildings;
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel buildingsView;
    private javax.swing.JTextArea constructedBuildingsArea;
    private javax.swing.JLabel constructedBuildingsLabel;
    private javax.swing.JButton eventOption1Btn;
    private javax.swing.JButton eventOption2Btn;
    private javax.swing.JButton eventOption3Btn;
    private javax.swing.JButton eventOption4Btn;
    private javax.swing.JTextArea eventText;
    private javax.swing.JPanel eventView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea lastEventTextBox;
    private javax.swing.JTabbedPane mainView;
    private javax.swing.JLabel populationAmount;
    private javax.swing.JLabel populationGrowthrate;
    private javax.swing.JPanel populationView;
    private javax.swing.JButton quitBtn;
    private javax.swing.JLabel resourcesLabel;
    private javax.swing.JLabel turnClock;
    private javax.swing.JSplitPane view;
    // End of variables declaration//GEN-END:variables
}
