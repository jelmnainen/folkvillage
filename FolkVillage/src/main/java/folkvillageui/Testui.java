/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folkvillageui;
import java.util.ArrayList;
import folkvillage.*;
import folkvillage.buildings.Building;
import java.util.Iterator;
import javax.swing.JPanel;

/**
 *
 * @author sanho
 */
public class Testui extends javax.swing.JFrame {
    
    private Village village;
    
    //elements
    private javax.swing.JButton endTurn;
    private javax.swing.JButton goToOther;
    private javax.swing.JButton systemExit;
    private javax.swing.JLabel populationLabel;
    private javax.swing.JLabel populationAmount;
    private javax.swing.JLabel turnClock;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JPanel villagewindow;
    private javax.swing.JPanel eventwindow;
    
    //styles
    private java.awt.Font header1;
    

    /**
     * Creates new form main
     */
    public Testui(Village village) {
        this.village = village;
        initComponents();
        this.tick();        
    }

    private Testui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        
        //styles
        this.header1        = new java.awt.Font("Tahoma", 1, 18);

        //panels
        villagewindow       = new javax.swing.JPanel();
        eventwindow         = new javax.swing.JPanel();
        
        //buttons
        endTurn             = new javax.swing.JButton("End turn");
        goToOther           = new javax.swing.JButton("Switch view");
        systemExit          = new javax.swing.JButton("Ragequit");

            //button actions
            endTurn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    endTurnActionPerformed(evt);
                }
            });

            goToOther.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    goToOtherActionPerformed(evt);
                }
            });

            systemExit.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    systemExitActionPerformed(evt);
                }
            });
        
        //labels
        villageLabel        = new javax.swing.JLabel("Village");
        populationLabel     = new javax.swing.JLabel("Population:");
        populationAmount    = new javax.swing.JLabel("amount");
        turnClock           = new javax.swing.JLabel("Turn: 0");
 
        villageLabel.setFont(this.header1); 
        
        javax.swing.GroupLayout villagewindowLayout = new javax.swing.GroupLayout(villagewindow);
        villagewindow.setLayout(villagewindowLayout);
        
        villagewindowLayout.setHorizontalGroup(
            villagewindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, villagewindowLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(villageLabel)
                .addGap(200, 200, 200))
            .addGroup(villagewindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(populationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populationAmount)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        villagewindowLayout.setVerticalGroup(
            villagewindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(villagewindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(villageLabel)
                .addGap(18, 18, 18)
                .addGroup(villagewindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(populationLabel)
                    .addComponent(populationAmount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );


        javax.swing.GroupLayout menu = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(menu);
        menu.setHorizontalGroup(
            menu.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu.createSequentialGroup()
                .addContainerGap()
                .addGroup(menu.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(systemExit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endTurn)
                    .addComponent(goToOther)
                    .addComponent(turnClock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(villagewindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        menu.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {endTurn, goToOther, systemExit});

        menu.setVerticalGroup(
            menu.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu.createSequentialGroup()
                .addContainerGap()
                .addComponent(turnClock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToOther, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endTurn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                .addComponent(systemExit)
                .addGap(11, 11, 11))
            .addComponent(villagewindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }                        
    private void initCustomComponents(){
        
    }
    private void goToOtherActionPerformed(java.awt.event.ActionEvent evt) {                                          
        int windowWidth = this.villagewindow.getWidth();
        int windowHeight = this.villagewindow.getHeight();
        this.villagewindow.setVisible(false);
        
    }                                         

    private void systemExitActionPerformed(java.awt.event.ActionEvent evt) {                                           
        System.exit(0);
    }                                          

    private void endTurnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        this.tick();
    }                                       
     
    /**
     * Tick is called after every endturn event. It calls Village's tick(),
     * which distributes the tick to all member's tick functions.
     * 
     * After tick, UI updates itself to reflect the new situation
     */
    private void tick(){
        
        this.village.tick();
        this.updateVillageScreen();
        
    }
    
    /**
     * Wraps all UI update functions
     */
    private void updateVillageScreen(){ 
        //turn counter
        this.turnClock.setText(this.village.getTurnCountAsString());
        
        //villagers
        this.populationAmount.setText( Integer.toString(this.village.getPopulation().getPopulationAmount()) );

        this.updateConstructedBuildings();
    }
    
    /**
     * Used to update all constructed buildings to UI
     */
    private void updateConstructedBuildings(){
        
        ArrayList<Building> buildings = this.village.getReadyBuildings();
        
        for (Building building : buildings) {   
        }
        
    }
    
}
